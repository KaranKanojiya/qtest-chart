{{- if .Values.workflow.enabled -}}
apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: mgr-workflow-
  {{- with .Values.workflow.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Values.workflow.adminModeNamespace }}
spec:
  entrypoint: mgr-workflow
  podGC:  # Pod GC provides the ability to delete pods automatically without deleting the workflow.
    # OnWorkflowSuccess - delete pods when workflow is successful
    strategy: {{ .Values.workflow.podGC }}
  serviceAccountName: {{ .Values.workflow.serviceAccountName }}
  templates:
    - name: mgr-workflow
      steps:
        - - name: run-api-test-1
            template: run-api-test-1
          - name: run-api-test-2
            template: run-api-test-2
          - name: run-api-test-3
            template: run-api-test-3
          - name: run-api-test-4
            template: run-api-test-4
  {{- if .Values.chaos.enabled -}}
        - - name: run-benchmark
            template: run-benchmark
          - name: run-chaos
            template: run-chaos
        - - name: revert-chaos
            template: revert-chaos
  {{- end }}
    - name: run-chaos
      inputs:
        artifacts:
        - name: run-chaos
          path: /tmp/chaosengine.yaml
          raw:
            data: |
              apiVersion: litmuschaos.io/v1alpha1
              kind: ChaosEngine
              metadata:
                name: qtest-mgr-pod-delete-chaos
                namespace: {{ .Values.workflow.adminModeNamespace }}
              spec:
                appinfo:
                  appns: qtest
                  applabel: "app=qtest-mgr"
                  appkind: rollout
                jobCleanUpPolicy: retain
                monitoring: false
                annotationCheck: 'true'
                engineState: 'active'
                chaosServiceAccount: litmus-admin
                experiments:
                  - name: pod-delete
                    spec:
                      components:
                        env:
                          - name: TOTAL_CHAOS_DURATION
                            value: "30"
                          - name: CHAOS_INTERVAL
                            value: "10"
                          - name: FORCE
                            value: "false"
      container:
        image: lachlanevenson/k8s-kubectl
        command: [sh, -c]
        args: ['kubectl apply -f /tmp/chaosengine.yaml -n {{ .Values.workflow.adminModeNamespace }} | echo "sleeping for 120s" | sleep 120 ']

    - name: run-benchmark
      inputs:
        artifacts:
        - name: run-benchmark
          path: /tmp/bench.yaml
          raw:
            data: |
              apiVersion: batch/v1
              kind: Job
              metadata:
                labels:
                  app: qtest-mgr-bench
                generateName: qtest-mgr-bench-
              spec:
                template:
                  metadata:
                    labels:
                      app: qtest-mgr-bench
                  spec:
                    restartPolicy: Never
                    containers:
                    - args:
                      - -c
                      - /go/bin/main -r -c10 -t${BENCHMARK_DURATION} -n 10000000 http://${qtest-mgr_SVC_NAME}:${qtest-mgr_PORT_NUM}/; exit 0
                      command:
                      - /bin/sh
                      env:
                        - name: qtest-mgr_SVC_NAME
                          value: "qtest-mgr.default.svc.cluster.local"
                        - name: qtest-mgr_PORT_NUM
                          value: "80"
                        - name: BENCHMARK_DURATION
                          value: "300"
                      image: devth/alpine-bench
                      imagePullPolicy: Always
                      name: qtest-mgr-bench
      container:
        image: lachlanevenson/k8s-kubectl
        command: [sh, -c]
        args: ['kubectl create -f /tmp/bench.yaml -n qtest']

    - name: revert-chaos
      container:
        image: lachlanevenson/k8s-kubectl
        command: [sh, -c]
        args: [' sleep 20 | kubectl delete chaosengine qtest-mgr-pod-delete-chaos -n {{ .Values.workflow.adminModeNamespace }}']

    - name: run-api-test-1
      inputs:
        artifacts:
        - name: run-api-test-1
          path: /src
          git:
            repo: {{ .Values.workflow.postman.repo }}
            revision: "master"
            usernameSecret:
              name: gitlab-creds
              key: username
            passwordSecret:
              name: gitlab-creds
              key: password
      container:
        image: {{ .Values.workflow.postman.image }}
        command: [sh, -c]
        args: ["./postman/dev-run.sh smoketest1"]
        workingDir: /src

    - name: run-api-test-2
      inputs:
        artifacts:
        - name: run-api-test-2
          path: /src
          git:
            repo: {{ .Values.workflow.postman.repo }}
            revision: "master"
            usernameSecret:
              name: gitlab-creds
              key: username
            passwordSecret:
              name: gitlab-creds
              key: password
      container:
        image: {{ .Values.workflow.postman.image }}
        command: [sh, -c]
        args: ["./postman/dev-run.sh smoketest2"]
        workingDir: /src

    - name: run-api-test-3
      inputs:
        artifacts:
        - name: run-api-test-3
          path: /src
          git:
            repo: {{ .Values.workflow.postman.repo }}
            revision: "master"
            usernameSecret:
              name: gitlab-creds
              key: username
            passwordSecret:
              name: gitlab-creds
              key: password
      container:
        image: {{ .Values.workflow.postman.image }}
        command: [sh, -c]
        args: ["./postman/dev-run.sh smoketest3"]
        workingDir: /src

    - name: run-api-test-4
      inputs:
        artifacts:
        - name: run-api-test-4
          path: /src
          git:
            repo: {{ .Values.workflow.postman.repo }}
            revision: "master"
            usernameSecret:
              name: gitlab-creds
              key: username
            passwordSecret:
              name: gitlab-creds
              key: password
      container:
        image: {{ .Values.workflow.postman.image }}
        command: [sh, -c]
        args: ["./postman/dev-run.sh smoketest4"]
        workingDir: /src
{{- end }}
